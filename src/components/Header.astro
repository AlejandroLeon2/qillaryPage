---
import MenuItem from "../components/ui/MenuItem.astro";
import { multidays } from "../data/multiDays";
import { offRoadTours } from "../data/offRoadTours";
import { qillary } from "../data/qillary";
import { peruTreks } from "../data/peruTreks";
import { allTours } from "../data/allTours";

function all(entrada, enlace) {
  return entrada.map((tour) => {
    const slug = tour.name
      .toLowerCase()
      .replace(/&/g, "and")
      .replace(/[^\w\s-]/g, "") // elimina signos como comas, etc.
      .replace(/\s+/g, "-"); // espacios por guiones

    return {
      day: tour.duration,
      label: tour.name,
      href: `/${enlace}/${slug}`,
    };
  });
}
const submenuallTours = all(allTours, "alltours");
const submenuPeruTreks = all(peruTreks, "perutreks");
const submenuMultidays = all(multidays, "multidays");
const submenuOffRoadTours = all(offRoadTours, "offroadtours");

const menuData = [
  {
    label: "Home",
    href: "/",
  },
  {
    label: "Peru Treks",
    children: submenuPeruTreks,
  },
  {
    label: "Tours",
    children: submenuallTours,
  },
  {
    label: "Off Road Tours",
    children: submenuOffRoadTours,
  },
  {
    label: "Multidays",
    children: submenuMultidays,
  },
  {
    label: "Contact Us",
    href: "/contacus",
  },
];
---

<header
  class="fixed inset-0 bg-white z-50 md:flex md:flex-col h-19 md:h-20"
  aria-label="Menú móvil principal"
>
  <section
    class="hidden md:flex justify-between px-2 w-full md:bg-qillary-dark text-sm text-qillary-white"
  >
    <!-- Información de contacto (visible y rastreable) -->
    <address class="not-italic hidden md:flex flex-wrap gap-6 items-center">
      <div class="flex items-center gap-2">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          class="h-5 w-5 text-qillary-aqua"
          fill="currentColor"
        >
          <path d="M2 8.5V19a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8.5l-10 6.25L2 8.5z"
          ></path>
          <path d="M22 6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v.5l10 6.25L22 6.5V6z"
          ></path>
        </svg>

        <a
          href={`mailto:${qillary.contact.contactos[0].valor}`}
          title={qillary.contact.contactos[0].title}
          class="hover:underline">{qillary.contact.contactos[0].valor}</a
        >
      </div>
      <div class="flex items-center gap-2">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 24 24"
          class="text-qillary-aqua"
          fill="currentColor"
          class="lucide lucide-phone-icon lucide-phone"
          ><path
            d="M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384"
          ></path></svg
        >

        <a
          href={`tel:${qillary.contact.contactos[1].valor.trim()}`}
          title={qillary.contact.contactos[0].title}
          class="hover:underline">{qillary.contact.contactos[1].valor}</a
        >
      </div>
      <div class="flex items-center gap-2">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 384 512"
          class="min-w-4.5 min-h-4.5 max-w-4.5 max-h-4.5 text-qillary-aqua"
          fill="currentColor"
        >
          <path
            d="M192 0C86 0 0 86 0 192c0 77.4 27.5 99.6 172.3 310.6a24 24 0 0 0 39.4 0C356.5 291.6 384 269.4 384 192 384 86 298 0 192 0zm0 272a80 80 0 1 1 80-80 80 80 0 0 1-80 80z"
          ></path>
        </svg>
        <span>{qillary.contact.oficinas[1].direccion}</span>
      </div>
    </address>

    <!-- Social + Idioma + Usuario -->
    <nav
      aria-label="Redes sociales y configuración"
      class="flex items-center gap-4"
    >
      <ul class="hidden md:flex gap-6 mr-10 list-none">
        <li>
          <a
            href={qillary.contact.facebook.url}
            title={qillary.contact.facebook.description}
            aria-label={qillary.contact.facebook.title}
            rel="noopener"
            target="_blank"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 320 512"
              width="19"
              height="19"
              class="hover:text-blue-400"
              fill="currentColor"
              aria-label="Facebook icon"
              role="img"
            >
              <path
                d="M279.14 288l14.22-92.66h-88.91V127.41c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.14 44.38-121.14 124.72v70.62H22.89V288h81.33v224h100.2V288z"
              ></path>
            </svg>
          </a>
        </li>
        <li>
          <a
            href={qillary.contact.instagram.url}
            title={qillary.contact.instagram.description}
            aria-label={qillary.contact.instagram.title}
            rel="noopener"
            target="_blank"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              class="hover:text-pink-600"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-instagram-icon lucide-instagram"
              ><rect width="20" height="20" x="2" y="2" rx="5" ry="5"
              ></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"
              ></path><line x1="17.5" x2="17.51" y1="6.5" y2="6.5"></line></svg
            >
          </a>
        </li>
        <li>
          <a
            href={qillary.contact.tiktok.url}
            title={qillary.contact.tiktok.description}
            aria-label={qillary.contact.tiktok.title}
            rel="noopener"
            target="_blank"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 448 512"
              class="hover:text-amber-500"
              width="19"
              height="19"
              fill="currentColor"
              aria-label="TikTok icon"
              role="img"
            >
              <path
                d="M325.6 32c1.6 43.2 35.2 78.1 78.4 78.6v85.4c-32.6-1.2-63.3-11.6-89.2-29v192.3c0 73.6-59.7 133.4-133.4 133.4s-133.4-59.7-133.4-133.4c0-72.1 57.1-130.7 128.8-133.3v86.7c-25.4 2.5-45.2 24-45.2 50.1 0 27.8 22.5 50.3 50.3 50.3s50.3-22.5 50.3-50.3V32h93.4z"
              ></path>
            </svg>
          </a>
        </li>
      </ul>

      <div id="google_translate_element" class="mx-auto"></div>

      <style>
        #google_translate_element {
          font-size: 1.75rem;
          line-height: 0.45rem;
        }
      </style>

      <!-- Script de inicialización del traductor -->
      <script is:inline>
        document.addEventListener("DOMContentLoaded", () => {
          setTimeout(() => {
            const panelTraductor =
              document
                .querySelector("table.VIpgJd-ZVi9od-ORHb-KE6vqe")
                ?.closest("table") ||
              document
                .querySelector("table.VIpgJd-ZVi9od-l4eHX-hSRGPd")
                ?.closest("table");

            if (panelTraductor) {
              panelTraductor.style.display = "none";
              console.log("Panel de Google Translate ocultado.");
            } else {
              console.warn("No se encontró el panel del traductor.");
            }
          }, 1000); // Ajusta el tiempo si el contenido tarda más en cargarse
        });

        document.addEventListener("DOMContentLoaded", () => {
          setTimeout(() => {
            const icono = document.querySelector(".goog-te-gadget-icon");
            const contenedor = document.querySelector(".goog-te-gadget-simple");

            if (icono) icono.style.display = "none";

            if (contenedor) {
              contenedor.style.backgroundColor = "aqua";
              contenedor.style.padding = "0.8rem 1rem"; // padding Y: 3rem, padding X: 1rem
              contenedor.style.margin = "0.4rem";
              contenedor.style.border = "none";
              contenedor.style.borderRadius = "0.2rem";

              const textos = contenedor.querySelectorAll("span, a, div ");
              const textos2 = contenedor.querySelectorAll("img");
              textos2.forEach((imagen) => {
                imagen.style.display = "none";
              });

              textos.forEach((el) => {
                el.style.display = "non";
                el.style.color = "black";
                el.style.fontWeight = "600"; // Equivalente a font-semibold
              });
            }
          }, 300); // Espera 3 segundos tras cargar el DOM
        });

        function googleTranslateElementInit() {
          new google.translate.TranslateElement(
            {
              pageLanguage: "en,es",
              includedLanguages: "es,en",
              layout: google.translate.TranslateElement.InlineLayout.SIMPLE,
            },
            "google_translate_element"
          );
        }
        const observer = new MutationObserver(() => {
          const elementos = document.querySelectorAll(".skiptranslate");

          elementos.forEach((el) => {
            // Si contiene un iframe sin contenido útil, lo ocultamos
            const iframe = el.querySelector("iframe");
            if (iframe && iframe.id.includes("container")) {
              el.style.display = "none";
              iframe.style.display = "none";
              console.log("Iframe de traducción ocultado.");
            }
          });
        });

        observer.observe(document.body, {
          childList: true,
          subtree: true,
        });

        function activarTraductor() {
          const contenedor = document.getElementById(
            "google_translate_element"
          );

          const intentarAbrirMenu = () => {
            const combo = contenedor?.querySelector(".goog-te-combo");
            if (combo) {
              combo.focus();
              combo.click();
            } else {
              setTimeout(intentarAbrirMenu, 200);
            }
          };

          intentarAbrirMenu();
        }
      </script>

      <!-- Carga del script oficial de Google Translate -->
    </nav>
  </section>

  <section class="md:flex md:justify md:items-center md:bg-white shadow">
    <div
      class="flex items-center h-20 bg-white md:bg-transparent px-3 lg:ml-10 md:px-0 md:h-20"
    >
      <button id="close-menu" class="md:hidden" aria-label="Abrir menú"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-menu-icon lucide-menu"
          ><path d="M4 12h16"></path><path d="M4 18h16"></path><path d="M4 6h16"
          ></path></svg
        ></button
      >
      <a
        title="Home - pagina de inicio de Qillary Tours"
        href="/"
        class="text-xl flex font-semibold mx-auto md:mx-0 text-cyan-700"
      >
        <img
          <img
          src="/logo-qillary.webp"
          alt="Qillary Tours - Viajes por Perú"
          title="Qillary Tours | Descubre Perú con expertos locales"
          class="w-40 h-auto object-cover"
        /></a
      >
    </div>

    <nav id="mobile-menu" class="hidden md:flex md:h-10 md:max-w-full mx-auto">
      <ul
        id="menu-principal"
        class="md:space-y-2 md:flex h-[88vh] bg-black/40 md:bg-transparent md:h-full overflow-y-scroll md:overflow-visible lg:gap-10"
      >
        {menuData.map((item) => <MenuItem {...item} />)}
      </ul>
    </nav>
  </section>
</header>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const menu = document.getElementById("menu-principal");

    if (!menu) return;

    menu.addEventListener("click", (event) => {
      const target = event.target;

      if (target.matches(".escuchar")) {
        event.stopPropagation();

        const subMenu = target.nextElementSibling;

        // Verificamos si ese submenú ya está visible
        const isOpen = subMenu && subMenu.classList.contains("grid");

        // Cerramos todos los submenús abiertos
        const subMenus = menu.querySelectorAll(".escuchar + *");
        subMenus.forEach((s) => {
          s.classList.add("hidden");
          s.classList.remove("grid");
        });

        // Si estaba cerrado antes del clic, lo abrimos
        if (!isOpen && subMenu) {
          subMenu.classList.remove("hidden");
          subMenu.classList.add("grid");
        }
      }
    });
  });

  document.addEventListener("DOMContentLoaded", () => {
    const allMenus = document.querySelectorAll("details");

    allMenus.forEach((menu) => {
      menu.addEventListener("toggle", () => {
        if (menu.open) {
          allMenus.forEach((other) => {
            if (other !== menu) other.removeAttribute("open");
          });
        }
      });
    });
  });

  document.addEventListener("DOMContentLoaded", () => {
    const menu = document.getElementById("mobile-menu");
    const closeBtn = document.getElementById("close-menu");
    const links = document.querySelectorAll(".menu-link");

    const closeMenu = () => {
      menu.classList.toggle("hidden");
    };

    closeBtn.addEventListener("click", closeMenu);
    links.forEach((link) => link.addEventListener("click", closeMenu));
  });
</script>
