---
import MenuItem from "../components/ui/MenuItem.astro";
import { multidays } from "../data/multiDays";
import { offRoadTours } from "../data/offRoadTours";
import { qillary } from "../data/qillary";
import { peruTreks } from "../data/peruTreks";
import { allTours } from "../data/allTours";

function all(entrada, enlace) {
  return entrada.map((tour) => {
    const slug = tour.name
      .toLowerCase()
      .replace(/&/g, "and")
      .replace(/[^\w\s-]/g, "") // elimina signos como comas, etc.
      .replace(/\s+/g, "-"); // espacios por guiones

    return {
      day: tour.duration,
      label: tour.name,
      href: `/${enlace}/${slug}`,
    };
  });
}
const submenuallTours = all(allTours, "alltours");
const submenuPeruTreks = all(peruTreks, "perutreks");
const submenuMultidays = all(multidays, "multidays");
const submenuOffRoadTours = all(offRoadTours, "offroadtours");

const menuData = [
  {
    label: "Home",
    href: "/",
  },
  {
    label: "Peru Treks",
    children: submenuPeruTreks,
  },
  {
    label: "Tours",
    children: submenuallTours,
  },
  {
    label: "Off Road Tours",
    children: submenuOffRoadTours,
  },
  {
    label: "Multidays",
    children: submenuMultidays,
  },
  {
    label: "Contact Us",
    href: "/contacus",
  },
];
---

<header
  class="fixed inset-0 bg-white z-50 md:flex md:flex-col h-19 md:h-27"
  aria-label="Menú móvil principal"
>
  <section
    class="hidden md:flex justify-between px-2 pt-3.5 w-full bg-qillary-dark text-sm text-qillary-white"
  >
    <!-- Información de contacto (visible y rastreable) -->
    <address class="not-italic flex flex-wrap gap-6 items-center">
      <div class="flex items-center gap-2">
        <i class="fas fa-envelope text-qillary-aqua" aria-hidden="true"></i>
        <a
          href={`mailto:${qillary.contact.contactos[0].valor}`}
          title={qillary.contact.contactos[0].title}
          class="hover:underline">{qillary.contact.contactos[0].valor}</a
        >
      </div>
      <div class="flex items-center gap-2">
        <i class="fas fa-phone text-qillary-aqua" aria-hidden="true"></i>
        <a
          href={`tel:${qillary.contact.contactos[1].valor.trim()}`}
          title={qillary.contact.contactos[0].title}
          class="hover:underline">{qillary.contact.contactos[1].valor}</a
        >
      </div>
      <div class="flex items-center gap-2">
        <i class="fas fa-map-marker-alt text-qillary-aqua" aria-hidden="true"
        ></i>
        <span>{qillary.contact.oficinas[1].direccion}</span>
      </div>
    </address>

    <!-- Social + Idioma + Usuario -->
    <nav
      aria-label="Redes sociales y configuración"
      class="flex items-center gap-4"
    >
      <ul class="flex gap-6 mr-10 list-none">
        <li>
          <a
            href={qillary.contact.facebook.url}
            title={qillary.contact.facebook.description}
            aria-label={qillary.contact.facebook.title}
            rel="noopener"
            target="_blank"
          >
            <i class="fab fa-facebook-f hover:text-cyan-500"></i>
          </a>
        </li>
        <li>
          <a
            href={qillary.contact.instagram.url}
            title={qillary.contact.instagram.description}
            aria-label={qillary.contact.instagram.title}
            rel="noopener"
            target="_blank"
          >
            <i class="fab fa-instagram hover:text-pink-500"></i>
          </a>
        </li>
        <li>
          <a
            href={qillary.contact.tiktok.url}
            title={qillary.contact.tiktok.description}
            aria-label={qillary.contact.tiktok.title}
            rel="noopener"
            target="_blank"
          >
            <i class="fab fa-tiktok hover:text-amber-400"></i>
          </a>
        </li>
      </ul>
      <!-- Botón flotante o fijo -->
      <!-- Contenedor del traductor -->
      <div id="google_translate_element" class="mt-6 hidden md:flex min-w-30">
      </div>

      <!-- Estilos para personalizar el widget -->
      <style>
        #google_translate_element {
          font-size: 1.75rem;
          line-height: 0.45rem;
        }
      </style>

      <!-- Script de inicialización del traductor -->
      <script is:inline>
        document.addEventListener("DOMContentLoaded", () => {
          setTimeout(() => {
            const icono = document.querySelector(".goog-te-gadget-icon");
            const contenedor = document.querySelector(".goog-te-gadget-simple");

            if (icono) icono.style.display = "none";

            if (contenedor) {
              contenedor.style.backgroundColor = "aqua";
              contenedor.style.padding = "0.5rem 1rem"; // padding Y: 3rem, padding X: 1rem
              contenedor.style.marginBottom = "0.5rem";
              contenedor.style.border = "none";
              contenedor.style.borderRadius = "0.2rem";

              const textos = contenedor.querySelectorAll("span, a, div");
              textos.forEach((el) => {
                el.style.color = "black";
                el.style.fontWeight = "600"; // Equivalente a font-semibold
              });
            }
          }, 300); // Espera 3 segundos tras cargar el DOM
        });

        function googleTranslateElementInit() {
          new google.translate.TranslateElement(
            {
              pageLanguage: "en,es",
              includedLanguages: "es,en",
              layout: google.translate.TranslateElement.InlineLayout.SIMPLE,
            },
            "google_translate_element"
          );
        }

        function activarTraductor() {
          const contenedor = document.getElementById(
            "google_translate_element"
          );

          const intentarAbrirMenu = () => {
            const combo = contenedor?.querySelector(".goog-te-combo");
            if (combo) {
              combo.focus();
              combo.click();
            } else {
              setTimeout(intentarAbrirMenu, 200);
            }
          };

          intentarAbrirMenu();
        }
      </script>

      <!-- Carga del script oficial de Google Translate -->
    </nav>
  </section>

  <section class="md:flex md:justify md:items-center md:bg-white shadow">
    <div
      class="flex items-center h-20 bg-white md:bg-transparent px-3 lg:ml-10 md:px-0 md:h-20"
    >
      <button id="close-menu" class="md:hidden" aria-label="Abrir menú"
        ><i class="fas fa-bars text-2xl"></i></button
      >
      <a
        title="Home - pagina de inicio de Qillary Tours"
        href="/"
        class="text-xl flex font-semibold mx-auto md:mx-0 text-cyan-700"
      >
        <img
          <img
          src="/logo-qillary.webp"
          alt="Qillary Tours - Viajes por Perú"
          title="Qillary Tours | Descubre Perú con expertos locales"
          class="w-40 h-auto object-cover"
        /></a
      >
    </div>

    <nav id="mobile-menu" class="hidden md:flex md:h-10 md:max-w-full mx-auto">
      <ul
        id="menu-principal"
        class="md:space-y-2 md:flex h-[88vh] bg-black/40 md:bg-transparent md:h-full overflow-y-scroll md:overflow-visible lg:gap-10"
      >
        {menuData.map((item) => <MenuItem {...item} />)}
      </ul>
    </nav>
  </section>
</header>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const menu = document.getElementById("menu-principal");

    if (!menu) return;

    menu.addEventListener("click", (event) => {
      const target = event.target;

      if (target.matches(".escuchar")) {
        event.stopPropagation();

        const subMenu = target.nextElementSibling;

        // Verificamos si ese submenú ya está visible
        const isOpen = subMenu && subMenu.classList.contains("grid");

        // Cerramos todos los submenús abiertos
        const subMenus = menu.querySelectorAll(".escuchar + *");
        subMenus.forEach((s) => {
          s.classList.add("hidden");
          s.classList.remove("grid");
        });

        // Si estaba cerrado antes del clic, lo abrimos
        if (!isOpen && subMenu) {
          subMenu.classList.remove("hidden");
          subMenu.classList.add("grid");
        }
      }
    });
  });

  document.addEventListener("DOMContentLoaded", () => {
    const allMenus = document.querySelectorAll("details");

    allMenus.forEach((menu) => {
      menu.addEventListener("toggle", () => {
        if (menu.open) {
          allMenus.forEach((other) => {
            if (other !== menu) other.removeAttribute("open");
          });
        }
      });
    });
  });

  document.addEventListener("DOMContentLoaded", () => {
    const menu = document.getElementById("mobile-menu");
    const closeBtn = document.getElementById("close-menu");
    const links = document.querySelectorAll(".menu-link");

    const closeMenu = () => {
      menu.classList.toggle("hidden");
    };

    closeBtn.addEventListener("click", closeMenu);
    links.forEach((link) => link.addEventListener("click", closeMenu));
  });
</script>
